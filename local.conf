## NOTE: This file is automatically generated by Mail-in-a-Box.
##       Do not edit this file. It is continually updated by
##       Mail-in-a-Box and your changes will be lost.
##
##       Mail-in-a-Box machines are not meant to be modified.
##       If you modify any system configuration you are on
##       your own --- please do not ask for help from us.

upstream php-fpm {
	server unix:/var/run/php/php7.0-fpm.sock;
}

## box.tador.men

# Redirect all HTTP to HTTPS *except* the ACME challenges (Let's Encrypt TLS certificate
# domain validation challenges) path, which must be served over HTTP per the ACME spec
# (due to some Apache vulnerability).
server {
	listen 80;
	listen [::]:80;

	server_name box.tador.men;
	root /tmp/invalid-path-nothing-here;

	# Improve privacy: Hide version an OS information on
	# error pages and in the "Server" HTTP-Header.
	server_tokens off;

	location / {
		# Redirect using the 'return' directive and the built-in
		# variable '$request_uri' to avoid any capturing, matching
		# or evaluation of regular expressions.
		return 301 https://box.tador.men$request_uri;
	}

	location /.well-known/acme-challenge/ {
		# This path must be served over HTTP for ACME domain validation.
		# We map this to a special path where our TLS cert provisioning
		# tool knows to store challenge response files.
		alias /home/user-data/ssl/lets_encrypt/acme_challenges/;
	}
}

# The secure HTTPS server.
server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name box.tador.men;

	# Improve privacy: Hide version an OS information on
	# error pages and in the "Server" HTTP-Header.
	server_tokens off;

	ssl_certificate /home/user-data/ssl/ssl_certificate.pem;
	ssl_certificate_key /home/user-data/ssl/ssl_private_key.pem;

	# Expose this directory as static files.
	root /home/user-data/www/default;
	index index.php index.html index.htm;

	location = /robots.txt {
		log_not_found off;
		access_log off;
	}

	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /mailinabox.mobileconfig {
		alias /var/lib/mailinabox/mobileconfig.xml;
	}
	location = /.well-known/autoconfig/mail/config-v1.1.xml {
		alias /var/lib/mailinabox/mozilla-autoconfig.xml;
	}

	# Roundcube Webmail configuration.
	rewrite ^/mail$ /mail/ redirect;
	rewrite ^/mail/$ /mail/index.php;
	location /mail/ {
		index index.php;
		alias /usr/local/lib/roundcubemail/;
	}
	location ~ /mail/config/.* {
		# A ~-style location is needed to give this precedence over the next block.
		return 403;
	}
	location ~ /mail/.*\.php {
		# note: ~ has precendence over a regular location block
		include fastcgi_params;
		fastcgi_split_path_info ^/mail(/.*)()$;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME /usr/local/lib/roundcubemail/$fastcgi_script_name;
		fastcgi_pass php-fpm;

		# Outgoing mail also goes through this endpoint, so increase the maximum
		# file upload limit to match the corresponding Postfix limit.
		client_max_body_size 128M;
	}

	# Z-Push (Microsoft Exchange ActiveSync)
	location /Microsoft-Server-ActiveSync {
		include /etc/nginx/fastcgi_params;
		fastcgi_param SCRIPT_FILENAME /usr/local/lib/z-push/index.php;
		fastcgi_param PHP_VALUE "include_path=.:/usr/share/php:/usr/share/pear:/usr/share/awl/inc";
		fastcgi_read_timeout 630;
		fastcgi_pass php-fpm;

		# Outgoing mail also goes through this endpoint, so increase the maximum
		# file upload limit to match the corresponding Postfix limit.
		client_max_body_size 128M;
	}
	location ~* ^/autodiscover/autodiscover.xml$ {
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME /usr/local/lib/z-push/autodiscover/autodiscover.php;
		fastcgi_param PHP_VALUE "include_path=.:/usr/share/php:/usr/share/pear:/usr/share/awl/inc";
		fastcgi_pass php-fpm;
	}


	# Control Panel
	# Proxy /admin to our Python based control panel daemon. It is
	# listening on IPv4 only so use an IP address and not 'localhost'.
	location /admin/assets {
		alias /usr/local/lib/mailinabox/vendor/assets;
	}
	rewrite ^/admin$ /admin/;
	rewrite ^/admin/munin$ /admin/munin/ redirect;
	location /admin/ {
		proxy_pass http://127.0.0.1:10222/;
		proxy_set_header X-Forwarded-For $remote_addr;
		add_header X-Frame-Options "DENY";
		add_header X-Content-Type-Options nosniff;
		add_header Content-Security-Policy "frame-ancestors 'none';";
		add_header Strict-Transport-Security max-age=31536000;
	}

	# Nextcloud configuration.
	rewrite ^/cloud$ /cloud/ redirect;
	rewrite ^/cloud/$ /cloud/index.php;
	rewrite ^/cloud/(contacts|calendar|files)$ /cloud/index.php/apps/$1/ redirect;
	rewrite ^(/cloud/core/doc/[^\/]+/)$ $1/index.html;
	location /cloud/ {
		alias /usr/local/lib/owncloud/;
	 	location ~ ^/cloud/(build|tests|config|lib|3rdparty|templates|data|README)/ {
	 		deny all;
	 	}
	 	location ~ ^/cloud/(?:\.|autotest|occ|issue|indie|db_|console) {
	 		deny all;
	 	}
	}
	location ~ ^(/cloud)((?:/ocs)?/[^/]+\.php)(/.*)?$ {
		# note: ~ has precendence over a regular location block
		# Accept URLs like:
		# /cloud/index.php/apps/files/
		# /cloud/index.php/apps/files/ajax/scan.php (it's really index.php; see 6fdef379adfdeac86cc2220209bdf4eb9562268d)
		# /cloud/ocs/v1.php/apps/files_sharing/api/v1 (see #240)
		# /cloud/remote.php/webdav/yourfilehere...
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME /usr/local/lib/owncloud/$2;
		fastcgi_param SCRIPT_NAME $1$2;
		fastcgi_param PATH_INFO $3;
		fastcgi_param MOD_X_ACCEL_REDIRECT_ENABLED on;
		fastcgi_param MOD_X_ACCEL_REDIRECT_PREFIX /owncloud-xaccel;
		fastcgi_read_timeout 630;
		fastcgi_pass php-fpm;
		client_max_body_size 1G;
		fastcgi_buffers 64 4K;
	}
	location ^~ /owncloud-xaccel/ {
		# This directory is for MOD_X_ACCEL_REDIRECT_ENABLED. Nextcloud sends the full file
		# path on disk as a subdirectory under this virtual path.
		# We must only allow 'internal' redirects within nginx so that the filesystem
		# is not exposed to the world.
		internal;
		alias /;
	}
	location ~ ^/((caldav|carddav|webdav).*)$ {
		# Z-Push doesn't like getting a redirect, and a plain rewrite didn't work either.
		# Properly proxying like this seems to work fine.
		proxy_pass https://127.0.0.1/cloud/remote.php/$1;
	}
	rewrite ^/.well-known/host-meta /cloud/public.php?service=host-meta last;
	rewrite ^/.well-known/host-meta.json /cloud/public.php?service=host-meta-json last;
	rewrite ^/.well-known/carddav /cloud/remote.php/carddav/ redirect;
	rewrite ^/.well-known/caldav /cloud/remote.php/caldav/ redirect;

# ssl files sha1: 6a7a80c8907617d122af30a654a5215685a3a367 / 98ee3584fa52048f57bf8a8244f9c6873a9b863e
add_header Strict-Transport-Security max-age=31536000;

	# Disable viewing dotfiles (.htaccess, .svn, .git, etc.)
	# This block is placed at the end. Nginx's precedence rules means this block
	# takes precedence over all non-regex matches and only regex matches that
	# come after it (i.e. none of those, since this is the last one.) That means
	# we're blocking dotfiles in the static hosted sites but not the FastCGI-
	# handled locations for Nextcloud (which serves user-uploaded files that might
	# have this pattern, see #414) or some of the other services.
	location ~ /\.(ht|svn|git|hg|bzr) {
		log_not_found off;
		access_log off;
		deny all;
	}
}
## tador.men

# Redirect all HTTP to HTTPS *except* the ACME challenges (Let's Encrypt TLS certificate
# domain validation challenges) path, which must be served over HTTP per the ACME spec
# (due to some Apache vulnerability).
server {
	listen 80;
	listen [::]:80;

	server_name tador.men;
	root /tmp/invalid-path-nothing-here;

	# Improve privacy: Hide version an OS information on
	# error pages and in the "Server" HTTP-Header.
	server_tokens off;

	location / {
		# Redirect using the 'return' directive and the built-in
		# variable '$request_uri' to avoid any capturing, matching
		# or evaluation of regular expressions.
		return 301 https://tador.men$request_uri;
	}

	location /.well-known/acme-challenge/ {
		# This path must be served over HTTP for ACME domain validation.
		# We map this to a special path where our TLS cert provisioning
		# tool knows to store challenge response files.
		alias /home/user-data/ssl/lets_encrypt/acme_challenges/;
	}
}

# The secure HTTPS server.
server {
	listen 443 ssl;
	listen [::]:443 ssl;
	
	server_name tador.men;

	# Improve privacy: Hide version an OS information on
	# error pages and in the "Server" HTTP-Header.
	server_tokens off;

	ssl_certificate /home/user-data/ssl/ssl_certificate.pem;
	ssl_certificate_key /home/user-data/ssl/ssl_private_key.pem;
	
	# Expose this directory as static files.
	root /home/user-data/www/default;
	index index.html index.htm index.php;

	
	location / {
		index index.html index.php;
		try_files $uri $uri/ $uri.php;
	}
	

	location ^~ /admin/cc/ {
		auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
		index index.html index.php;
		location ~ \.php$ {
        	try_files /dummy/$uri @php;
   		}
	}	

	location ~ \.php$ {
    	try_files /dummy/$uri @php;
	}

	location ~ /from_mail/ {
		rewrite /admin/from_mail/([A-Za-z0-9-]+)/([0-9]+)/?$ /admin/from_mail.php?attack=$1&id=$2;
	}	

	location ~* /report/ {
	auth_basic "Restricted";
                auth_basic_user_file /etc/nginx/.htpasswd;
	}

	location ~* /sender/ {
        	auth_basic "Restricted";
                auth_basic_user_file /etc/nginx/.htpasswd;
        }


	location = /robots.txt {
		log_not_found off;
		access_log off;
	}

	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /mailinabox.mobileconfig {
		alias /var/lib/mailinabox/mobileconfig.xml;
	}
	location = /.well-known/autoconfig/mail/config-v1.1.xml {
		alias /var/lib/mailinabox/mozilla-autoconfig.xml;
	
	}
	# Roundcube Webmail configuration.
	rewrite ^/mail$ /mail/ redirect;
	rewrite ^/mail/$ /mail/index.php;
	location /mail/ {
		index index.php;
		alias /usr/local/lib/roundcubemail/;
	}
	location ~ /mail/config/.* {
		# A ~-style location is needed to give this precedence over the next block.
		return 403;
	}
	location ~ /mail/.*\.php {
		# note: ~ has precendence over a regular location block
		include fastcgi_params;
		fastcgi_split_path_info ^/mail(/.*)()$;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME /usr/local/lib/roundcubemail/$fastcgi_script_name;
		fastcgi_pass php-fpm;

		# Outgoing mail also goes through this endpoint, so increase the maximum
		# file upload limit to match the corresponding Postfix limit.
		client_max_body_size 128M;
	}

	# Z-Push (Microsoft Exchange ActiveSync)
	location /Microsoft-Server-ActiveSync {
		include /etc/nginx/fastcgi_params;
		fastcgi_param SCRIPT_FILENAME /usr/local/lib/z-push/index.php;
		fastcgi_param PHP_VALUE "include_path=.:/usr/share/php:/usr/share/pear:/usr/share/awl/inc";
		fastcgi_read_timeout 630;
		fastcgi_pass php-fpm;

		# Outgoing mail also goes through this endpoint, so increase the maximum
		# file upload limit to match the corresponding Postfix limit.
		client_max_body_size 128M;
	}
	location ~* ^/autodiscover/autodiscover.xml$ {
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME /usr/local/lib/z-push/autodiscover/autodiscover.php;
		fastcgi_param PHP_VALUE "include_path=.:/usr/share/php:/usr/share/pear:/usr/share/awl/inc";
		fastcgi_pass php-fpm;
	}

	location @php {
	    fastcgi_pass unix:/var/run/php5-fpm.sock;
	    fastcgi_index index.php;
	    include fastcgi_params;
	}	
	

# ssl files sha1: 6a7a80c8907617d122af30a654a5215685a3a367 / 98ee3584fa52048f57bf8a8244f9c6873a9b863e
add_header Strict-Transport-Security max-age=31536000;

	# Disable viewing dotfiles (.htaccess, .svn, .git, etc.)
	# This block is placed at the end. Nginx's precedence rules means this block
	# takes precedence over all non-regex matches and only regex matches that
	# come after it (i.e. none of those, since this is the last one.) That means
	# we're blocking dotfiles in the static hosted sites but not the FastCGI-
	# handled locations for Nextcloud (which serves user-uploaded files that might
	# have this pattern, see #414) or some of the other services.
	location ~ /\.(ht|svn|git|hg|bzr) {
		log_not_found off;
		access_log off;
		deny all;
	}
}
## www.tador.men

# Redirect all HTTP to HTTPS *except* the ACME challenges (Let's Encrypt TLS certificate
# domain validation challenges) path, which must be served over HTTP per the ACME spec
# (due to some Apache vulnerability).
server {
	listen 80;
	listen [::]:80;

	server_name www.tador.men;
	root /tmp/invalid-path-nothing-here;

	# Improve privacy: Hide version an OS information on
	# error pages and in the "Server" HTTP-Header.
	server_tokens off;

	location / {
		# Redirect using the 'return' directive and the built-in
		# variable '$request_uri' to avoid any capturing, matching
		# or evaluation of regular expressions.
		return 301 https://www.tador.men$request_uri;
	}

	location /.well-known/acme-challenge/ {
		# This path must be served over HTTP for ACME domain validation.
		# We map this to a special path where our TLS cert provisioning
		# tool knows to store challenge response files.
		alias /home/user-data/ssl/lets_encrypt/acme_challenges/;
	}
}

# The secure HTTPS server.
server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name www.tador.men;

	# Improve privacy: Hide version an OS information on
	# error pages and in the "Server" HTTP-Header.
	server_tokens off;

	ssl_certificate /home/user-data/ssl/ssl_certificate.pem;
	ssl_certificate_key /home/user-data/ssl/ssl_private_key.pem;

	rewrite ^(.*) https://tador.men$1 permanent;

	location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}
